name: miniRobot Release

on:
  push:
    tags:
      - '*'  # 任何 tag 被推送时触发工作流

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Build project
      run: cargo build --verbose --all-targets

    - name: Run tests
      run: cargo test --verbose -- --nocapture

    - name: Create bin directory
      run: mkdir -p upload_bin

    - name: Publish binary
      if: success()
      run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            cp target/debug/mini_robot target/debug/mini_robot_info target/debug/mini_robot_test upload_bin/
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            cp target/debug/mini_robot target/debug/mini_robot_info target/debug/mini_robot_test upload_bin/
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp target/debug/mini_robot.exe target/debug/mini_robot_info.exe target/debug/mini_robot_test.exe upload_bin/
          fi

    - name: Upload binary
      if: success()
      uses: actions/upload-artifact@v2
      with:
        name: miniRobot-${{ matrix.os }}
        path: upload_bin/

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: miniRobot-ubuntu-latest
        path: ./upload_bin/

    - name: Download macOS binaries
      uses: actions/download-artifact@v2
      with:
        name: miniRobot-macos-latest
        path: ./upload_bin/

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REPOS_WORKFLOW_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Linux Release Assets
      if: steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REPOS_WORKFLOW_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./upload_bin/miniRobot-ubuntu-latest.zip
        asset_name: miniRobot-ubuntu-latest.zip
        asset_content_type: application/zip

    - name: Upload macOS Release Assets
      if: steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.REPOS_WORKFLOW_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./upload_bin/miniRobot-ubuntu-latest.zip
        asset_name: miniRobot-ubuntu-latest.zip
        asset_content_type: application/zip
